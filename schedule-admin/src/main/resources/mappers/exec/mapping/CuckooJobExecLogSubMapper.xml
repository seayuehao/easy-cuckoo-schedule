<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ecs.schedule.dao.exec.CuckooJobExecLogSubMapper" >
   
  <sql id="Base_Column_List" >
    <!--
     WARNING -  该映射文件为自动生成, 请勿修改.
    -->
    id, job_id, group_id, job_class_application, job_name, trigger_type, type_daily, 
    cron_expression, tx_date, flow_last_time, flow_cur_time, cuckoo_parallel_job_args, 
    job_start_time, job_end_time, exec_job_status, cuckoo_client_ip, cuckoo_client_tag, 
    latest_check_time, need_triggle_next, force_triggle, remark
  </sql>
   
  <select id="pageOverTimeJobs" resultMap="org.ecs.schedule.dao.exec.CuckooJobExecLogMapper.BaseResultMap" parameterType="org.ecs.schedule.qry.QryBase" >
    select s1.*
	from cuckoo_job_exec_log s1
	INNER JOIN cuckoo_job_extend s2
	on s1.job_id = s2.job_id
	where s1.exec_job_status in('RUNNING')
	and s1.job_exec_time &lt; UNIX_TIMESTAMP() * 1000 - s2.over_time_long
	<if test="groupIds != null and groupIds.size() > 0" >
		and s1.group_id in
    	<foreach collection="groupIds" item="listItem" open="(" close=")" separator="," index="index">
     		#{listItem}
    	</foreach>
    </if>
	order by s1.id desc
    <if test="limit != 0 " >
       limit ${start} , ${limit}
    </if>
  </select>
   
  <select id="countOverTimeJobs" parameterType="org.ecs.schedule.qry.QryBase" resultType="java.lang.Integer" >
    select count(1)
	from cuckoo_job_exec_log s1
	INNER JOIN cuckoo_job_extend s2
	on s1.job_id = s2.job_id
	where s1.exec_job_status in('RUNNING')
	and s1.job_exec_time &lt; UNIX_TIMESTAMP() * 1000 - s2.over_time_long
	<if test="groupIds != null and groupIds.size() > 0" >
		and s1.group_id in
    	<foreach collection="groupIds" item="listItem" open="(" close=")" separator="," index="index">
     		#{listItem}
    	</foreach>
    </if>
  </select>
  
  
  
  
  <select id="pagePendingJobs" resultMap="org.ecs.schedule.dao.exec.CuckooJobExecLogMapper.BaseResultMap" parameterType="org.ecs.schedule.qry.QryBase" >
    select s1.*
	from cuckoo_job_exec_log s1
	INNER JOIN cuckoo_job_detail s2
	on s1.job_id = s2.id
	where s1.exec_job_status in('PENDING','RUNNING')
	and s2.job_status != 'PAUSE'
	<if test="groupIds != null and groupIds.size() > 0" >
		and s1.group_id in
    	<foreach collection="groupIds" item="listItem" open="(" close=")" separator="," index="index">
     		#{listItem}
    	</foreach>
    </if>
	order by s1.id desc
    <if test="limit != 0 " >
       limit ${start} , ${limit}
    </if>
  </select>
   
  <select id="countPendingJobs" parameterType="org.ecs.schedule.qry.QryBase" resultType="java.lang.Integer" >
    select count(1)
	from cuckoo_job_exec_log s1
	INNER JOIN cuckoo_job_detail s2
	on s1.job_id = s2.id
	where s1.exec_job_status in('PENDING','RUNNING')
	and s2.job_status != 'PAUSE'
	<if test="groupIds != null and groupIds.size() > 0" >
		and s1.group_id in
    	<foreach collection="groupIds" item="listItem" open="(" close=")" separator="," index="index">
     		#{listItem}
    	</foreach>
    </if>
  </select>
  
   
  
   
</mapper>